using System;
using System.Collections.Generic;
using Sirenix.OdinInspector;
using UnityEngine;

namespace Localization.Editor
{
	public partial class LocalizationConstantGenerator
	{
		[Serializable]
		public class ProjectSettings
		{
			//TODO: добавить возможность генерировать не в одну папку, а рядом с классами которые используют константы
			[FolderPath]
			[Tooltip("Папка куда сгенерируются константы")]
			public string folderPath = "Assets/Scripts/Localization/";

			[Space]
			[ValueDropdown(nameof(GetAll), IsUniqueList = true)]
			[Tooltip("Список языков перевод которых нужно добавить комментарию при генерации")]
			public string[] locales = {"en"};

			public char keySeparator = '_';

			[Space]
			[Tooltip("По каким словам пропускать ключи")]
			public string[] skipTags;

			[Tooltip("Пропускать ключи которые начинаются с таких слов")]
			public string[] skipPrefixes;

			[Space]
			[TextArea]
			public string scriptComment = "// <auto-generated/>";

			[Space]
			public string scriptFileNamePostfix = "Generated";

			private IEnumerable<ValueDropdownItem<string>> GetAll()
			{
				foreach (var code in LocManager.GetAllLocalCodesEditor())
				{
					var label = LocManager.GetLanguageEditor(code);
					if (LocManager.CurrentLocaleCodeEditor == label)
						label += " (Default)";
					yield return new ValueDropdownItem<string>(label, code);
				}
			}
		}

		internal static ProjectSettings projectSettings => LocalizationConstantGeneratorSettings.Asset.settings;
	}
}
